<?php

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function d9_base_theme_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $content_type = $node->bundle();
        $suggestions[] = 'page__' . $content_type;
    }
}

/**
 * Implements hook_preprocess_html() for html templates.
 */
function d9_base_theme_preprocess_html(&$variables)
{
    $node = \Drupal::routeMatch()->getParameter('node');// Load the node entity from current route
    if ($node) {
      // Add META tag title + description from back-office
      if ($node->hasField('field_display_title')) {
        $displayTitle = $node->get('field_display_title');
        if (!empty($displayTitle->value)) {
            // Get the current page title, which we'll assume is in the title 
            $curTitle = $variables['head_title']['title'];
            $count = 1;
            // Replace that string with our display title, keeping the rest of the string intact
            $newTitle = str_replace($node->get('title')->value, $displayTitle->value, $curTitle, $count);
            // Set it as our new title
            $variables['head_title']['title'] = $newTitle;
        }
      }
      // Override viewport setting
      // $count = 0;
      // foreach ($variables['page']['#attached']['html_head'] as $item) {
      //   if ($item[1] === 'viewport') {
      //     $variables['page']['#attached']['html_head'][$count][0]['#attributes']['content'] = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';
      //   }
      //   $count++;
      // }
    }
}


/**
 * Implements hook_theme().
 * Manually assign unformatted field loops or simplistic twig files to reduce theme files
 *
 */
function d9_base_theme_theme($existing, $type, $theme, $path) {
    $unformattedFields = [
        'template' => 'field--unformatted',
        'base hook' => 'field',
        'path' =>  drupal_get_path('theme', 'd9_base_theme') .'/templates/field'
    ];
    return [
        'field__node__title' => $unformattedFields,
        'field__paragraph__field_header' => $unformattedFields,
        'field__block_content__field_paragraph_band' => $unformattedFields,
        'field__block_content__field_paragraph_bands' => $unformattedFields,
        'field__field_paragraph_bands' => $unformattedFields,
        'field__node__field_display_title' => $unformattedFields,
        'field__node__field_restricted_html' => $unformattedFields,
        'field__paragraph__field_restricted_html' => $unformattedFields,
        'field__paragraph__field_layout_style' => $unformattedFields,
        'field__paragraph__field_media_image' => $unformattedFields,
        'field__paragraph__field_paragraph_bands' => $unformattedFields,
        'field__paragraph__field_paragraph_couplet' => $unformattedFields,
        'field__paragraph__field_phone' => $unformattedFields,
        'field__paragraph__field_restricted_html' => $unformattedFields,
        'field__paragraph__field_title' => $unformattedFields
    ];
}